on:
  workflow_dispatch:

name: Fetch All Secrets from AWS Secrets Manager

permissions:
  id-token: write
  contents: read  

jobs:
  fetch-secrets:
    name: Fetch Secrets
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::214580919421:role/GitHubOIDCRole
          aws-region: us-east-1

      - name: Export AWS credentials to environment variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ steps.configure-aws-credentials.outputs.aws-access-key-id }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ steps.configure-aws-credentials.outputs.aws-secret-access-key }}" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=${{ steps.configure-aws-credentials.outputs.aws-session-token }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Print AWS credentials (Base64-encoded to avoid masking)
        env:
          SHOW_SECRETS: true
        run: |
          if [ "$SHOW_SECRETS" = "true" ]; then
            echo "UNMASKED AWS_ACCESS_KEY_ID (Base64): $(echo -n "$AWS_ACCESS_KEY_ID" | base64)"
            echo "UNMASKED AWS_SECRET_ACCESS_KEY (Base64): $(echo -n "$AWS_SECRET_ACCESS_KEY" | base64)"
            echo "UNMASKED AWS_SESSION_TOKEN (Base64): $(echo -n "$AWS_SESSION_TOKEN" | base64)"
            echo "Decode with: echo 'BASE64_STRING' | base64 -d"
          else
            echo "Credentials are available but masked for security"
          fi
          
      - name: Fetch All Secrets from AWS Secrets Manager
        id: list-secrets
        run: |
          echo "Fetching all secrets..."
          SECRET_LIST=$(aws secretsmanager list-secrets --query 'SecretList[*].Name' --output json | jq -c)
          echo "SECRET_LIST=$SECRET_LIST" >> $GITHUB_ENV
          
      - name: Fetch and Print Secret Values
        run: |
          echo "Fetching secret values..."
          for SECRET in $(echo "$SECRET_LIST" | jq -r '.[]'); do
            SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id "$SECRET" --query SecretString --output text)
            echo "Secret Name: $SECRET"
            echo "Secret Value: $SECRET_VALUE"
          done
